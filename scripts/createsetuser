#!/usr/bin/python2
"""Set user from baseimage-docker with creation of external user mirrored inside container.
Original: https://github.com/phusion/baseimage-docker/blob/master/image/setuser
"""
import sys, os, pwd
import subprocess

if len(sys.argv) < 6:
    sys.stderr.write("Usage: /sbin/createsetuser USERNAME UID GROUPNAME GID COMMAND [args..]\n")
    sys.exit(1)

def abort(message):
    sys.stderr.write("setuser: %s\n" % message)
    sys.exit(1)

username, uid, groupname, gid = sys.argv[1:5]
subprocess.call(["addgroup", "--quiet", "--gid", gid, groupname])
subprocess.call(["useradd", "-m", "-d", "/home/%s" % username,
                 "-s", "/bin/bash", "-g", gid, "-o", "-u", uid, username])
try:
    user = pwd.getpwnam(username)
except KeyError:
    abort("user %s not found" % username)
os.initgroups(username, user.pw_gid)
os.setgid(user.pw_gid)
os.setuid(user.pw_uid)
os.environ['USER'] = username
os.environ['HOME'] = user.pw_dir
os.environ['UID'] = str(user.pw_uid)
# inherit environmental variables set in /etc/profile
inherit = set(["PATH", "LD_LIBRARY_PATH", "PERL5LIB"])
envs = subprocess.check_output(["bash", "-l", "-c", "env"])
for line in envs.split("\n"):
    if line.strip() and "=" in line:
        key, val = line.split("=", 1)
        if key in inherit:
            os.environ[key] = val
try:
    os.execvp(sys.argv[5], sys.argv[5:])
except OSError as e:
    abort("cannot execute %s: %s" % (sys.argv[5], str(e)))
